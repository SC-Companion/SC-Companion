name: 🚀 Release & Auto-Update

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔍 Type check
        run: npm run typecheck
      
      - name: 🧹 Lint
        run: npm run lint

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build application
        run: npm run build
      
      - name: 📱 Build installer (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:installer
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📱 Build installer (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:installer
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      
      - name: 📱 Build installer (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:installer
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: |
            dist-installer/*.exe
            dist-installer/*.dmg
            dist-installer/*.AppImage
            dist-installer/*-Setup.exe
            dist-installer/latest*.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-installer/
          merge-multiple: true
      
      - name: 🏷️ Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}